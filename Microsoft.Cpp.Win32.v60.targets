<!--
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Daffodil for Visual Studio
- Native multi-targeting support for Visual Studio 6 in Visual Studio 2010

Rev. 1  [2010-06-12]
Rev. 2  [2010-10-03]
Rev. 3  [2010-10-06]

Owen Wengerd, ManuSoft
http://www.manusoft.com

Credits
  Some aspects of this project are based on information in this MSDN blog post:
  http://blogs.msdn.com/b/vcblog/archive/2009/12/08/c-native-multi-targeting.aspx
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(VCTargetsPath)\Platforms\Win32\ImportBefore\*.v60.targets" Condition="Exists('$(VCTargetsPath)\Platforms\Win32\ImportBefore')" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!-- These tasks replace the built in CL, Link, and LIB tasks so the build process can be customized:
         - Response file must be output in ANSI encoding instead of Unicode
         - Build tool switches whose default value has since changed must be corrected
  -->
  <UsingTask TaskName="CLA"   AssemblyFile="Daffodil.CPPTasks.Win32.v60.dll" />
  <UsingTask TaskName="LinkA" AssemblyFile="Daffodil.CPPTasks.Win32.v60.dll" />
  <UsingTask TaskName="LIBA"  AssemblyFile="Daffodil.CPPTasks.Win32.v60.dll" />

  <PropertyGroup>
    <PlatformPrepareForBuildDependsOn>PlatformToolsetPrepareForBuild;$(PlatformPrepareForBuildDependsOn)</PlatformPrepareForBuildDependsOn>
  </PropertyGroup>

  <!-- *******************************************************************************************
        PlatformToolsetPrepareForBuild target
       ******************************************************************************************* -->
  <Target Name="PlatformToolsetPrepareForBuild" DependsOnTargets="_DetermineManagedStateFromCL;$(PlatformToolsetPrepareForBuildDependsOn)">
    <!-- If the project is a managed assembly, issue a warning -->
    <VCMessage Condition="'$(ManagedAssembly)' == 'true' and
                          '$(DesignTimeBuild)'!='true'"
            Code="MSB8002" Type="Warning" Arguments="$(PlatformToolset);$(TargetFrameworkVersion)"/>
  </Target>

  
  <!-- *******************************************************************************************
        CLCompile
       ******************************************************************************************* -->

  <Target Name="ClCompile"
          Condition="'@(ClCompile)' != ''"
          DependsOnTargets="SelectClCompile">
    <ItemGroup>
      <ClCompile>
        <PrecompiledHeaderOutputFile  Condition="'%(ClCompile.PrecompiledHeader)' == 'NotUsing' or '%(ClCompile.PrecompiledHeader)' == ''"></PrecompiledHeaderOutputFile>
        <PrecompiledHeaderOutputFile  Condition="'%(ClCompile.PrecompiledHeader)' != 'NotUsing' and '$(RunCodeAnalysisOnce)'=='true' and '%(ClCompile.PrecompiledHeader)' != ''">%(ClCompile.PrecompiledHeaderOutputFile).codeanalysis</PrecompiledHeaderOutputFile>
        <PrecompiledHeaderFile        Condition="'%(ClCompile.PrecompiledHeader)' == 'NotUsing' or '%(ClCompile.PrecompiledHeader)' == ''"></PrecompiledHeaderFile>
        <AssemblerListingLocation     Condition="'%(ClCompile.AssemblerOutput)' == 'NoListing' or '%(ClCompile.AssemblerOutput)' == ''"></AssemblerListingLocation>
        <CompileAs                    Condition="'%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.c'">CompileAsC</CompileAs>
        <CompileAs                    Condition="'%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' != '.c'">CompileAsCpp</CompileAs>
        <MinimalRebuildFromTracking   Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</MinimalRebuildFromTracking>
      </ClCompile>
    </ItemGroup>

    <PropertyGroup>
      <CLToolArchitecture Condition="'$(CLToolArchitecture)' == ''">$(DefaultToolArchitecture)</CLToolArchitecture>
    </PropertyGroup>

    <Delete Condition="'%(ClCompile.DebugInformationFormat)' != '' and '%(ClCompile.DebugInformationFormat)' != 'OldStyle' and '%(ClCompile.ProgramDataBaseFileName)' != '' and !Exists(%(ClCompile.ProgramDataBaseFileName))"
            Files="%(ClCompile.PrecompiledHeaderOutputFile)" />

    <!-- Precompiled headers - need to build them first -->
    <!-- Removed the following switches:
        BasicRuntimeChecks                 ="%(ClCompile.BasicRuntimeChecks)"
        BufferSecurityCheck                ="%(ClCompile.BufferSecurityCheck)"
        EnablePREfast                      ="%(ClCompile.EnablePREfast)"
        ErrorReporting                     ="%(ClCompile.ErrorReporting)"
        FloatingPointModel                 ="%(ClCompile.FloatingPointModel)"
        ForceConformanceInForLoopScope     ="%(ClCompile.ForceConformanceInForLoopScope)"
        SmallerTypeCheck                   ="%(ClCompile.SmallerTypeCheck)"
        TreatWChar_tAsBuiltInType          ="%(ClCompile.TreatWChar_tAsBuiltInType)"
    -->
    <CLA Condition="'%(ClCompile.PrecompiledHeader)' == 'Create' and '%(ClCompile.ExcludedFromBuild)'!='true'"
        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        Sources                            ="@(ClCompile)"

        AdditionalIncludeDirectories       ="%(ClCompile.AdditionalIncludeDirectories)"
        AdditionalOptions                  ="%(ClCompile.AdditionalOptions)"
        AdditionalUsingDirectories         ="%(ClCompile.AdditionalUsingDirectories)"
        AssemblerListingLocation           ="%(ClCompile.AssemblerListingLocation)"
        AssemblerOutput                    ="%(ClCompile.AssemblerOutput)"
        BrowseInformation                  ="%(ClCompile.BrowseInformation)"
        BrowseInformationFile              ="%(ClCompile.BrowseInformationFile)"
        CallingConvention                  ="%(ClCompile.CallingConvention)"
        CompileAsManaged                   ="%(ClCompile.CompileAsManaged)"
        CompileAs                          ="%(ClCompile.CompileAs)"
        DebugInformationFormat             ="%(ClCompile.DebugInformationFormat)"
        DisableLanguageExtensions          ="%(ClCompile.DisableLanguageExtensions)"
        DisableSpecificWarnings            ="%(ClCompile.DisableSpecificWarnings)"
        EnableEnhancedInstructionSet       ="%(ClCompile.EnableEnhancedInstructionSet)"
        EnableFiberSafeOptimizations       ="%(ClCompile.EnableFiberSafeOptimizations)"
        ExceptionHandling                  ="%(ClCompile.ExceptionHandling)"
        ExcludedInputPaths                 ="$(ExcludePath)"
        ExpandAttributedSource             ="%(ClCompile.ExpandAttributedSource)"
        FavorSizeOrSpeed                   ="%(ClCompile.FavorSizeOrSpeed)"
        FloatingPointExceptions            ="%(ClCompile.FloatingPointExceptions)"

        ForcedIncludeFiles                 ="%(ClCompile.ForcedIncludeFiles)"
        ForcedUsingFiles                   ="%(ClCompile.ForcedUsingFiles)"
        FunctionLevelLinking               ="%(ClCompile.FunctionLevelLinking)"
        GenerateXMLDocumentationFiles      ="%(ClCompile.GenerateXMLDocumentationFiles)"
        IgnoreStandardIncludePath          ="%(ClCompile.IgnoreStandardIncludePath)"
        InlineFunctionExpansion            ="%(ClCompile.InlineFunctionExpansion)"
        IntrinsicFunctions                 ="%(ClCompile.IntrinsicFunctions)"
        MinimalRebuild                     ="%(ClCompile.MinimalRebuild)"
        MultiProcessorCompilation          ="%(ClCompile.MultiProcessorCompilation)"
        ObjectFileName                     ="%(ClCompile.ObjectFileName)"
        OmitDefaultLibName                 ="%(ClCompile.OmitDefaultLibName)"
        OmitFramePointers                  ="%(ClCompile.OmitFramePointers)"
        OpenMPSupport                      ="%(ClCompile.OpenMPSupport)"
        Optimization                       ="%(ClCompile.Optimization)"
        PrecompiledHeader                  ="%(ClCompile.PrecompiledHeader)"
        PrecompiledHeaderFile              ="%(ClCompile.PrecompiledHeaderFile)"
        PrecompiledHeaderOutputFile        ="%(ClCompile.PrecompiledHeaderOutputFile)"
        PreprocessKeepComments             ="%(ClCompile.PreprocessKeepComments)"
        PreprocessorDefinitions            ="%(ClCompile.PreprocessorDefinitions)"
        PreprocessSuppressLineNumbers      ="%(ClCompile.PreprocessSuppressLineNumbers)"
        PreprocessToFile                   ="%(ClCompile.PreprocessToFile)"
        ProcessorNumber                    ="%(ClCompile.ProcessorNumber)"
        ProgramDataBaseFileName            ="%(ClCompile.ProgramDataBaseFileName)"
        RuntimeLibrary                     ="%(ClCompile.RuntimeLibrary)"
        RuntimeTypeInfo                    ="%(ClCompile.RuntimeTypeInfo)"
        ShowIncludes                       ="%(ClCompile.ShowIncludes)"
        StringPooling                      ="%(ClCompile.StringPooling)"
        StructMemberAlignment              ="%(ClCompile.StructMemberAlignment)"
        SuppressStartupBanner              ="%(ClCompile.SuppressStartupBanner)"
        TreatSpecificWarningsAsErrors      ="%(ClCompile.TreatSpecificWarningsAsErrors)"
        TreatWarningAsError                ="%(ClCompile.TreatWarningAsError)"
        UndefineAllPreprocessorDefinitions ="%(ClCompile.UndefineAllPreprocessorDefinitions)"
        UndefinePreprocessorDefinitions    ="%(ClCompile.UndefinePreprocessorDefinitions)"
        UseFullPaths                       ="%(ClCompile.UseFullPaths)"
        UseUnicodeForAssemblerListing      ="%(ClCompile.UseUnicodeForAssemblerListing)"
        WarningLevel                       ="%(ClCompile.WarningLevel)"
        WholeProgramOptimization           ="%(ClCompile.WholeProgramOptimization)"
        XMLDocumentationFileName           ="%(ClCompile.XMLDocumentationFileName)"
        CreateHotpatchableImage            ="%(CLCompile.CreateHotpatchableImage)"

        TrackerLogDirectory                ="%(ClCompile.TrackerLogDirectory)"

        TLogReadFiles                      ="@(CLTLogReadFiles)"
        TLogWriteFiles                     ="@(CLTLogWriteFiles)"
        ToolExe                            ="$(CLToolExe)"
        ToolPath                           ="$(CLToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(ClCompile.MinimalRebuildFromTracking)"
        ToolArchitecture                   ="$(CLToolArchitecture)"
        TrackerFrameworkPath               ="$(CLTrackerFrameworkPath)"
        TrackerSdkPath                     ="$(CLTrackerSdkPath)"

        AcceptableNonZeroExitCodes         ="%(ClCompile.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution           ="$(ClYieldDuringToolExecution)"
      >
    </CLA>

    <!-- Rest of the sources -->
    <!-- Removed the following switches:
        BasicRuntimeChecks                 ="%(ClCompile.BasicRuntimeChecks)"
        BufferSecurityCheck                ="%(ClCompile.BufferSecurityCheck)"
        EnablePREfast                      ="%(ClCompile.EnablePREfast)"
        ErrorReporting                     ="%(ClCompile.ErrorReporting)"
        FloatingPointModel                 ="%(ClCompile.FloatingPointModel)"
        ForceConformanceInForLoopScope     ="%(ClCompile.ForceConformanceInForLoopScope)"
        SmallerTypeCheck                   ="%(ClCompile.SmallerTypeCheck)"
        TreatWChar_tAsBuiltInType          ="%(ClCompile.TreatWChar_tAsBuiltInType)"
    -->
    <CLA Condition="'%(ClCompile.PrecompiledHeader)' != 'Create' and '%(ClCompile.ExcludedFromBuild)'!='true'"
        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        Sources                            ="@(ClCompile)"

        AdditionalIncludeDirectories       ="%(ClCompile.AdditionalIncludeDirectories)"
        AdditionalOptions                  ="%(ClCompile.AdditionalOptions)"
        AdditionalUsingDirectories         ="%(ClCompile.AdditionalUsingDirectories)"
        AssemblerListingLocation           ="%(ClCompile.AssemblerListingLocation)"
        AssemblerOutput                    ="%(ClCompile.AssemblerOutput)"
        BrowseInformation                  ="%(ClCompile.BrowseInformation)"
        BrowseInformationFile              ="%(ClCompile.BrowseInformationFile)"
        CallingConvention                  ="%(ClCompile.CallingConvention)"
        CompileAsManaged                   ="%(ClCompile.CompileAsManaged)"
        CompileAs                          ="%(ClCompile.CompileAs)"
        DebugInformationFormat             ="%(ClCompile.DebugInformationFormat)"
        DisableLanguageExtensions          ="%(ClCompile.DisableLanguageExtensions)"
        DisableSpecificWarnings            ="%(ClCompile.DisableSpecificWarnings)"
        EnableEnhancedInstructionSet       ="%(ClCompile.EnableEnhancedInstructionSet)"
        EnableFiberSafeOptimizations       ="%(ClCompile.EnableFiberSafeOptimizations)"
        ExceptionHandling                  ="%(ClCompile.ExceptionHandling)"
        ExcludedInputPaths                 ="$(ExcludePath)"
        ExpandAttributedSource             ="%(ClCompile.ExpandAttributedSource)"
        FavorSizeOrSpeed                   ="%(ClCompile.FavorSizeOrSpeed)"
        FloatingPointExceptions            ="%(ClCompile.FloatingPointExceptions)"
        ForcedIncludeFiles                 ="%(ClCompile.ForcedIncludeFiles)"
        ForcedUsingFiles                   ="%(ClCompile.ForcedUsingFiles)"
        FunctionLevelLinking               ="%(ClCompile.FunctionLevelLinking)"
        GenerateXMLDocumentationFiles      ="%(ClCompile.GenerateXMLDocumentationFiles)"
        IgnoreStandardIncludePath          ="%(ClCompile.IgnoreStandardIncludePath)"
        InlineFunctionExpansion            ="%(ClCompile.InlineFunctionExpansion)"
        IntrinsicFunctions                 ="%(ClCompile.IntrinsicFunctions)"
        MinimalRebuild                     ="%(ClCompile.MinimalRebuild)"
        MultiProcessorCompilation          ="%(ClCompile.MultiProcessorCompilation)"
        ObjectFileName                     ="%(ClCompile.ObjectFileName)"
        OmitDefaultLibName                 ="%(ClCompile.OmitDefaultLibName)"
        OmitFramePointers                  ="%(ClCompile.OmitFramePointers)"
        OpenMPSupport                      ="%(ClCompile.OpenMPSupport)"
        Optimization                       ="%(ClCompile.Optimization)"
        PrecompiledHeader                  ="%(ClCompile.PrecompiledHeader)"
        PrecompiledHeaderFile              ="%(ClCompile.PrecompiledHeaderFile)"
        PrecompiledHeaderOutputFile        ="%(ClCompile.PrecompiledHeaderOutputFile)"
        PreprocessKeepComments             ="%(ClCompile.PreprocessKeepComments)"
        PreprocessorDefinitions            ="%(ClCompile.PreprocessorDefinitions)"
        PreprocessSuppressLineNumbers      ="%(ClCompile.PreprocessSuppressLineNumbers)"
        PreprocessToFile                   ="%(ClCompile.PreprocessToFile)"
        ProcessorNumber                    ="%(ClCompile.ProcessorNumber)"
        ProgramDataBaseFileName            ="%(ClCompile.ProgramDataBaseFileName)"
        RuntimeLibrary                     ="%(ClCompile.RuntimeLibrary)"
        RuntimeTypeInfo                    ="%(ClCompile.RuntimeTypeInfo)"
        ShowIncludes                       ="%(ClCompile.ShowIncludes)"
        StringPooling                      ="%(ClCompile.StringPooling)"
        StructMemberAlignment              ="%(ClCompile.StructMemberAlignment)"
        SuppressStartupBanner              ="%(ClCompile.SuppressStartupBanner)"
        TreatSpecificWarningsAsErrors      ="%(ClCompile.TreatSpecificWarningsAsErrors)"
        TreatWarningAsError                ="%(ClCompile.TreatWarningAsError)"
        UndefineAllPreprocessorDefinitions ="%(ClCompile.UndefineAllPreprocessorDefinitions)"
        UndefinePreprocessorDefinitions    ="%(ClCompile.UndefinePreprocessorDefinitions)"
        UseFullPaths                       ="%(ClCompile.UseFullPaths)"
        UseUnicodeForAssemblerListing      ="%(ClCompile.UseUnicodeForAssemblerListing)"
        WarningLevel                       ="%(ClCompile.WarningLevel)"
        WholeProgramOptimization           ="%(ClCompile.WholeProgramOptimization)"
        XMLDocumentationFileName           ="%(ClCompile.XMLDocumentationFileName)"
        CreateHotpatchableImage            ="%(CLCompile.CreateHotpatchableImage)"

        TrackerLogDirectory                ="%(ClCompile.TrackerLogDirectory)"

        TLogReadFiles                      ="@(CLTLogReadFiles)"
        TLogWriteFiles                     ="@(CLTLogWriteFiles)"
        ToolExe                            ="$(CLToolExe)"
        ToolPath                           ="$(CLToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(ClCompile.MinimalRebuildFromTracking)"
        ToolArchitecture                   ="$(CLToolArchitecture)"
        TrackerFrameworkPath               ="$(CLTrackerFrameworkPath)"
        TrackerSdkPath                     ="$(CLTrackerSdkPath)"

        AcceptableNonZeroExitCodes         ="%(ClCompile.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution           ="$(ClYieldDuringToolExecution)"
      >
    </CLA>

  </Target>

  <!-- *******************************************************************************************
          Link
         ******************************************************************************************* -->

  <Target Name="Link"
          Condition="'@(Link)' != ''">

    <ItemGroup>
      <_EmbedManagedResourceFile Include="@(Link->Metadata('EmbedManagedResourceFile')->Distinct())" />
      <_EmbedManagedResourceFile Include="@(Link->Metadata('AddModuleNamesToAssembly')->Distinct())" />
      <_EmbedManagedResourceFile Condition="'%(EmbeddedResource.LogicalName)' == '' and '%(EmbeddedResource.WithCulture)' != 'true'" Include="@(EmbeddedResource->'$(IntermediateOutputPath)%(ManifestResourceName).resources')" />
      <_EmbedManagedResourceFile Condition="'%(EmbeddedResource.LogicalName)' != '' and '%(EmbeddedResource.WithCulture)' != 'true'" Include="@(EmbeddedResource->'$(IntermediateOutputPath)%(ManifestResourceName).resources,%(LogicalName)')" />
    </ItemGroup>

    <PropertyGroup>
      <Link_MinimalRebuildFromTracking Condition="'@(Link->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Link_MinimalRebuildFromTracking>
      <LinkToolArchitecture Condition="'$(LinkToolArchitecture)' == ''">$(DefaultToolArchitecture)</LinkToolArchitecture>
      <LinkYieldDuringToolExecution Condition="'$(LinkYieldDuringToolExecution)' == '' and '%(Link.LinkTimeCodeGeneration)' == 'UseLinkTimeCodeGeneration'">true</LinkYieldDuringToolExecution>
    </PropertyGroup>

    <!--<ItemGroup>
      <LinkA>
        <ProfileGuidedDatabase Condition="'%(Link.LinkTimeCodeGeneration)' != 'PGOptimization' and
                                            '%(Link.LinkTimeCodeGeneration)' != 'PGUpdate' and
                                            '%(Link.LinkTimeCodeGeneration)' != 'PGInstrument'"></ProfileGuidedDatabase>
      </LinkA>
    </ItemGroup>-->

    <!-- Removed the following switches:
        CLRImageType                   ="%(Link.CLRImageType)"
        CLRSupportLastError            ="%(Link.CLRSupportLastError)"
        CLRThreadAttribute             ="%(Link.CLRThreadAttribute)"
        CLRUnmanagedCodeCheck          ="%(Link.CLRUnmanagedCodeCheck)"
        CreateHotPatchableImage        ="%(Link.CreateHotPatchableImage)"
        DataExecutionPrevention        ="%(Link.DataExecutionPrevention)"
        EmbedManagedResourceFile       ="@(_EmbedManagedResourceFile)"
        EnableUAC                      ="%(Link.EnableUAC)"
        GenerateManifest               ="$(GenerateManifest)"
        ImageHasSafeExceptionHandlers  ="%(Link.ImageHasSafeExceptionHandlers)"
        LinkErrorReporting             ="%(Link.LinkErrorReporting)"
        ManifestFile                   ="%(Link.ManifestFile)"
        ProfileGuidedDatabase          ="%(Link.ProfileGuidedDatabase)"
        RandomizedBaseAddress          ="%(Link.RandomizedBaseAddress)"
        TypeLibraryFile                ="%(Link.TypeLibraryFile)"
        TypeLibraryResourceID          ="%(Link.TypeLibraryResourceID)"
        UACExecutionLevel              ="%(Link.UACExecutionLevel)"
        UACUIAccess                    ="%(Link.UACUIAccess)"
    -->
    <LinkA
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(Link)"

        AdditionalDependencies         ="%(Link.AdditionalDependencies)"
        AdditionalLibraryDirectories   ="%(Link.AdditionalLibraryDirectories)"
        AdditionalManifestDependencies ="%(Link.AdditionalManifestDependencies)"
        AdditionalOptions              ="%(Link.AdditionalOptions)"
        AddModuleNamesToAssembly       ="%(Link.AddModuleNamesToAssembly)"
        AllowIsolation                 ="%(Link.AllowIsolation)"
        AssemblyDebug                  ="%(Link.AssemblyDebug)"
        AssemblyLinkResource           ="%(Link.AssemblyLinkResource)"
        BaseAddress                    ="%(Link.BaseAddress)"
        DelayLoadDLLs                  ="%(Link.DelayLoadDLLs)"
        DelaySign                      ="%(Link.DelaySign)"
        Driver                         ="%(Link.Driver)"
        EnableCOMDATFolding            ="%(Link.EnableCOMDATFolding)"
        EntryPointSymbol               ="%(Link.EntryPointSymbol)"
        FixedBaseAddress               ="%(Link.FixedBaseAddress)"
        ForceFileOutput                ="%(Link.ForceFileOutput)"
        ForceSymbolReferences          ="%(Link.ForceSymbolReferences)"
        FunctionOrder                  ="%(Link.FunctionOrder)"
        GenerateDebugInformation       ="%(Link.GenerateDebugInformation)"
        GenerateMapFile                ="%(Link.GenerateMapFile)"
        HeapCommitSize                 ="%(Link.HeapCommitSize)"
        HeapReserveSize                ="%(Link.HeapReserveSize)"
        IgnoreAllDefaultLibraries      ="%(Link.IgnoreAllDefaultLibraries)"
        IgnoreEmbeddedIDL              ="%(Link.IgnoreEmbeddedIDL)"
        IgnoreSpecificDefaultLibraries ="%(Link.IgnoreSpecificDefaultLibraries)"
        ImportLibrary                  ="%(Link.ImportLibrary)"
        KeyContainer                   ="%(Link.KeyContainer)"
        KeyFile                        ="%(Link.KeyFile)"
        LargeAddressAware              ="%(Link.LargeAddressAware)"
        LinkDLL                        ="%(Link.LinkDLL)"
        LinkIncremental                ="$(LinkIncremental)"
        LinkStatus                     ="%(Link.LinkStatus)"
        LinkTimeCodeGeneration         ="%(Link.LinkTimeCodeGeneration)"
        MapExports                     ="%(Link.MapExports)"
        MapFileName                    ="%(Link.MapFileName)"
        MergedIDLBaseFileName          ="%(Link.MergedIDLBaseFileName)"
        MergeSections                  ="%(Link.MergeSections)"
        MidlCommandFile                ="%(Link.MidlCommandFile)"
        MinimumRequiredVersion         ="%(Link.MinimumRequiredVersion)"
        ModuleDefinitionFile           ="%(Link.ModuleDefinitionFile)"
        MSDOSStubFileName              ="%(Link.MSDOSStubFileName)"
        OptimizeReferences             ="%(Link.OptimizeReferences)"
        OutputFile                     ="%(Link.OutputFile)"
        PreventDllBinding              ="%(Link.PreventDllBinding)"
        Profile                        ="%(Link.Profile)"
        ProgramDatabaseFile            ="%(Link.ProgramDatabaseFile)"

        NoEntryPoint                   ="%(Link.NoEntryPoint)"
        SectionAlignment               ="%(Link.SectionAlignment)"
        SetChecksum                    ="%(Link.SetChecksum)"
        ShowProgress                   ="%(Link.ShowProgress)"
        SpecifySectionAttributes       ="%(Link.SpecifySectionAttributes)"
        StackCommitSize                ="%(Link.StackCommitSize)"
        StackReserveSize               ="%(Link.StackReserveSize)"
        StripPrivateSymbols            ="%(Link.StripPrivateSymbols)"
        SubSystem                      ="%(Link.SubSystem)"
        SupportUnloadOfDelayLoadedDLL  ="%(Link.SupportUnloadOfDelayLoadedDLL)"
        SupportNobindOfDelayLoadedDLL  ="%(Link.SupportNobindOfDelayLoadedDLL)"
        SuppressStartupBanner          ="%(Link.SuppressStartupBanner)"
        SwapRunFromCD                  ="%(Link.SwapRunFromCD)"
        SwapRunFromNET                 ="%(Link.SwapRunFromNET)"
        TargetMachine                  ="%(Link.TargetMachine)"
        TerminalServerAware            ="%(Link.TerminalServerAware)"
        TreatLinkerWarningAsErrors     ="%(Link.TreatLinkerWarningAsErrors)"
        TurnOffAssemblyGeneration      ="%(Link.TurnOffAssemblyGeneration)"
        Version                        ="%(Link.Version)"

        TrackerLogDirectory            ="%(Link.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LinkTLogReadFiles)"
        TLogWriteFiles                 ="@(LinkTLogWriteFiles)"
        ToolExe                        ="$(LinkToolExe)"
        ToolPath                       ="$(LinkToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Link_MinimalRebuildFromTracking)"
        ToolArchitecture               ="$(LinkToolArchitecture)"
        TrackerFrameworkPath           ="$(LinkTrackerFrameworkPath)"
        TrackerSdkPath                 ="$(LinkTrackerSdkPath)"

        AcceptableNonZeroExitCodes     ="%(Link.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution       ="$(LinkYieldDuringToolExecution)"
      >
      <Output TaskParameter="SkippedExecution" PropertyName="LinkSkippedExecution" />
    </LinkA>

    <Message Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" Condition="'$(EmbedManifestBy)' != 'LINK'"/>
  </Target>

  <Target Name="LinkEmbedManifest"
          Condition="'@(Link)' != '' AND '$(EmbedManifestBy)'=='LINK' AND '$(LinkSkippedExecution)' != 'true'">

    <PropertyGroup>
      <LinkToolArchitecture Condition="'$(LinkToolArchitecture)' == ''">$(DefaultToolArchitecture)</LinkToolArchitecture>
    </PropertyGroup>

    <!--<ItemGroup>
      <LinkA>
        <ProfileGuidedDatabase Condition="'%(Link.LinkTimeCodeGeneration)' != 'PGOptimization' and
                                            '%(Link.LinkTimeCodeGeneration)' != 'PGUpdate' and
                                            '%(Link.LinkTimeCodeGeneration)' != 'PGInstrument'">
        </ProfileGuidedDatabase>
      </LinkA>
    </ItemGroup>-->

    <!-- Removed the following switches:
        CLRImageType                   ="%(Link.CLRImageType)"
        CLRSupportLastError            ="%(Link.CLRSupportLastError)"
        CLRThreadAttribute             ="%(Link.CLRThreadAttribute)"
        CLRUnmanagedCodeCheck          ="%(Link.CLRUnmanagedCodeCheck)"
        CreateHotPatchableImage        ="%(Link.CreateHotPatchableImage)"
        DataExecutionPrevention        ="%(Link.DataExecutionPrevention)"
        EmbedManagedResourceFile       ="@(_EmbedManagedResourceFile)"
        EnableUAC                      ="%(Link.EnableUAC)"
        GenerateManifest               ="$(GenerateManifest)"
        ImageHasSafeExceptionHandlers  ="%(Link.ImageHasSafeExceptionHandlers)"
        LinkErrorReporting             ="%(Link.LinkErrorReporting)"
        ManifestFile                   ="%(Link.ManifestFile)"
        ProfileGuidedDatabase          ="%(Link.ProfileGuidedDatabase)"
        RandomizedBaseAddress          ="%(Link.RandomizedBaseAddress)"
        TypeLibraryFile                ="%(Link.TypeLibraryFile)"
        TypeLibraryResourceID          ="%(Link.TypeLibraryResourceID)"
        UACExecutionLevel              ="%(Link.UACExecutionLevel)"
        UACUIAccess                    ="%(Link.UACUIAccess)"
    -->
    <LinkA
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(Link)"

        AdditionalDependencies         ="%(Link.AdditionalDependencies)"
        AdditionalLibraryDirectories   ="%(Link.AdditionalLibraryDirectories)"
        AdditionalManifestDependencies ="%(Link.AdditionalManifestDependencies)"
        AdditionalOptions              ="%(Link.AdditionalOptions)"
        AddModuleNamesToAssembly       ="%(Link.AddModuleNamesToAssembly)"
        AllowIsolation                 ="%(Link.AllowIsolation)"
        AssemblyDebug                  ="%(Link.AssemblyDebug)"
        AssemblyLinkResource           ="%(Link.AssemblyLinkResource)"
        BaseAddress                    ="%(Link.BaseAddress)"
        DelayLoadDLLs                  ="%(Link.DelayLoadDLLs)"
        DelaySign                      ="%(Link.DelaySign)"
        Driver                         ="%(Link.Driver)"
        EnableCOMDATFolding            ="%(Link.EnableCOMDATFolding)"
        EntryPointSymbol               ="%(Link.EntryPointSymbol)"
        FixedBaseAddress               ="%(Link.FixedBaseAddress)"
        ForceFileOutput                ="%(Link.ForceFileOutput)"
        ForceSymbolReferences          ="%(Link.ForceSymbolReferences)"
        FunctionOrder                  ="%(Link.FunctionOrder)"
        GenerateDebugInformation       ="%(Link.GenerateDebugInformation)"
        GenerateMapFile                ="%(Link.GenerateMapFile)"
        HeapCommitSize                 ="%(Link.HeapCommitSize)"
        HeapReserveSize                ="%(Link.HeapReserveSize)"
        IgnoreAllDefaultLibraries      ="%(Link.IgnoreAllDefaultLibraries)"
        IgnoreEmbeddedIDL              ="%(Link.IgnoreEmbeddedIDL)"
        IgnoreSpecificDefaultLibraries ="%(Link.IgnoreSpecificDefaultLibraries)"
        ImportLibrary                  ="%(Link.ImportLibrary)"
        KeyContainer                   ="%(Link.KeyContainer)"
        KeyFile                        ="%(Link.KeyFile)"
        LargeAddressAware              ="%(Link.LargeAddressAware)"
        LinkIncremental                ="$(LinkIncremental)"
        LinkStatus                     ="%(Link.LinkStatus)"
        LinkDLL	                       ="%(Link.LinkDLL)"
        LinkTimeCodeGeneration         ="%(Link.LinkTimeCodeGeneration)"
        MapExports                     ="%(Link.MapExports)"
        MapFileName                    ="%(Link.MapFileName)"
        MergedIDLBaseFileName          ="%(Link.MergedIDLBaseFileName)"
        MergeSections                  ="%(Link.MergeSections)"
        MidlCommandFile                ="%(Link.MidlCommandFile)"
        MinimumRequiredVersion         ="%(Link.MinimumRequiredVersion)"
        ModuleDefinitionFile           ="%(Link.ModuleDefinitionFile)"
        MSDOSStubFileName              ="%(Link.MSDOSStubFileName)"
        OptimizeReferences             ="%(Link.OptimizeReferences)"
        OutputFile                     ="%(Link.OutputFile)"
        PreventDllBinding              ="%(Link.PreventDllBinding)"
        Profile                        ="%(Link.Profile)"
        ProgramDatabaseFile            ="%(Link.ProgramDatabaseFile)"
        NoEntryPoint                   ="%(Link.NoEntryPoint)"
        SectionAlignment               ="%(Link.SectionAlignment)"
        SetChecksum                    ="%(Link.SetChecksum)"
        ShowProgress                   ="%(Link.ShowProgress)"
        SpecifySectionAttributes       ="%(Link.SpecifySectionAttributes)"
        StackCommitSize                ="%(Link.StackCommitSize)"
        StackReserveSize               ="%(Link.StackReserveSize)"
        StripPrivateSymbols            ="%(Link.StripPrivateSymbols)"
        SubSystem                      ="%(Link.SubSystem)"
        SupportUnloadOfDelayLoadedDLL  ="%(Link.SupportUnloadOfDelayLoadedDLL)"
        SupportNobindOfDelayLoadedDLL  ="%(Link.SupportNobindOfDelayLoadedDLL)"
        SuppressStartupBanner          ="%(Link.SuppressStartupBanner)"
        SwapRunFromCD                  ="%(Link.SwapRunFromCD)"
        SwapRunFromNET                 ="%(Link.SwapRunFromNET)"
        TargetMachine                  ="%(Link.TargetMachine)"
        TerminalServerAware            ="%(Link.TerminalServerAware)"
        TreatLinkerWarningAsErrors     ="%(Link.TreatLinkerWarningAsErrors)"
        TurnOffAssemblyGeneration      ="%(Link.TurnOffAssemblyGeneration)"
        Version                        ="%(Link.Version)"

        TrackerLogDirectory            ="%(Link.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LinkTLogReadFiles)"
        TLogWriteFiles                 ="@(LinkTLogWriteFiles)"
        ToolExe                        ="$(LinkToolExe)"
        ToolPath                       ="$(LinkToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Link_MinimalRebuildFromTracking)"
        ToolArchitecture               ="$(LinkToolArchitecture)"
        TrackerFrameworkPath           ="$(LinkTrackerFrameworkPath)"
        TrackerSdkPath                 ="$(LinkTrackerSdkPath)"

        AcceptableNonZeroExitCodes     ="%(Link.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution       ="$(LinkYieldDuringToolExecution)"
      >
    </LinkA>

    <Message Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
  </Target>

  <!-- *******************************************************************************************
        Lib
       ******************************************************************************************* -->

  <Target Name="Lib"
          Condition="'@(Lib)' != ''">
    <ItemGroup>
      <Lib>
        <MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</MinimalRebuildFromTracking>
      </Lib>
    </ItemGroup>

    <PropertyGroup>
      <LibToolArchitecture Condition="'$(LibToolArchitecture)' == ''">$(DefaultToolArchitecture)</LibToolArchitecture>
    </PropertyGroup>


    <!-- Removed the following switches:
      ErrorReporting                  ="%(Lib.LinkErrorReporting)"
    -->
    <LIBA
      Sources                         ="@(Lib)"

      AdditionalDependencies          ="%(Lib.AdditionalDependencies)"
      AdditionalLibraryDirectories    ="%(Lib.AdditionalLibraryDirectories)"
      AdditionalOptions               ="$(LibAdditionalOptions)"
      DisplayLibrary                  ="%(Lib.DisplayLibrary)"
      ExportNamedFunctions            ="%(Lib.ExportNamedFunctions)"
      ForceSymbolReferences           ="%(Lib.ForceSymbolReferences)"
      IgnoreAllDefaultLibraries       ="%(Lib.IgnoreAllDefaultLibraries)"
      IgnoreSpecificDefaultLibraries  ="%(Lib.IgnoreSpecificDefaultLibraries)"
      LinkTimeCodeGeneration          ="%(Lib.LinkTimeCodeGeneration)"
      ModuleDefinitionFile            ="%(Lib.ModuleDefinitionFile)"
      Name                            ="%(Lib.Name)"
      OutputFile                      ="%(Lib.OutputFile)"
      RemoveObjects                   ="%(Lib.RemoveObjects)"
      SubSystem                       ="%(Lib.SubSystem)"
      SuppressStartupBanner           ="%(Lib.SuppressStartupBanner)"
      TargetMachine                   ="%(Lib.TargetMachine)"
      TreatLibWarningAsErrors         ="%(Lib.TreatLibWarningAsErrors)"
      Verbose                         ="%(Lib.Verbose)"

      TrackerLogDirectory             ="%(Lib.TrackerLogDirectory)"

      TLogReadFiles                   ="@(LIBTLogReadFiles)"
      TLogWriteFiles                  ="@(LIBTLogWriteFiles)"
      ToolExe                         ="$(LIBToolExe)"
      ToolPath                        ="$(LIBToolPath)"
      TrackFileAccess                 ="$(TrackFileAccess)"
      MinimalRebuildFromTracking      ="%(Lib.MinimalRebuildFromTracking)"
      ToolArchitecture                ="$(LibToolArchitecture)"
      TrackerFrameworkPath            ="$(LibTrackerFrameworkPath)"
      TrackerSdkPath                  ="$(LibTrackerSdkPath)"

      AcceptableNonZeroExitCodes      ="%(Lib.AcceptableNonZeroExitCodes)"
      >
    </LIBA>

    <Message Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
  </Target>

  <Target Name="ImpLib"
          Condition="'@(ImpLib)' != '' and '$(IgnoreImportLibrary)' != 'true' and '$(GenerateImportLib)' == 'true'">
    <ItemGroup>
      <ImpLib>
        <MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</MinimalRebuildFromTracking>
      </ImpLib>
    </ItemGroup>

    <PropertyGroup>
      <LibUseEmptyDef Condition="'%(ImpLib.ModuleDefinitionFile)' == ''">/DEF:</LibUseEmptyDef>
      <LibToolArchitecture Condition="'$(LibToolArchitecture)' == ''">$(DefaultToolArchitecture)</LibToolArchitecture>
    </PropertyGroup>

    <!-- Removed the following switches:
      ErrorReporting                  ="%(Lib.LinkErrorReporting)"
    -->
    <LIBA
      Sources                         ="@(ImpLib)"

      AdditionalDependencies          ="%(ImpLib.AdditionalDependencies)"
      AdditionalLibraryDirectories    ="%(ImpLib.AdditionalLibraryDirectories)"
      AdditionalOptions               ="$(ImpLibAdditionalOptions) $(LibUseEmptyDef)"
      DisplayLibrary                  ="%(ImpLib.DisplayLibrary)"
      ExportNamedFunctions            ="%(ImpLib.ExportNamedFunctions)"
      ForceSymbolReferences           ="%(ImpLib.ForceSymbolReferences)"
      IgnoreAllDefaultLibraries       ="%(ImpLib.IgnoreAllDefaultLibraries)"
      IgnoreSpecificDefaultLibraries  ="%(ImpLib.IgnoreSpecificDefaultLibraries)"
      LinkTimeCodeGeneration          ="%(ImpLib.LinkTimeCodeGeneration)"
      ModuleDefinitionFile            ="%(ImpLib.ModuleDefinitionFile)"
      Name                            ="%(ImpLib.Name)"
      OutputFile                      ="%(ImpLib.OutputFile)"
      RemoveObjects                   ="%(ImpLib.RemoveObjects)"
      SubSystem                       ="%(ImpLib.SubSystem)"
      SuppressStartupBanner           ="%(ImpLib.SuppressStartupBanner)"
      TargetMachine                   ="%(ImpLib.TargetMachine)"
      TreatLibWarningAsErrors         ="%(ImpLib.TreatLibWarningAsErrors)"
      Verbose                         ="%(ImpLib.Verbose)"

      TrackerLogDirectory             ="%(ImpLib.TrackerLogDirectory)"

      TLogReadFiles                   ="@(LIBTLogReadFiles)"
      TLogWriteFiles                  ="@(LIBTLogWriteFiles)"
      ToolExe                         ="$(LIBToolExe)"
      ToolPath                        ="$(LIBToolPath)"
      TrackFileAccess                 ="$(TrackFileAccess)"
      MinimalRebuildFromTracking      ="%(ImpLib.MinimalRebuildFromTracking)"
      ToolArchitecture                ="$(LibToolArchitecture)"
      TrackerFrameworkPath            ="$(LibTrackerFrameworkPath)"
      TrackerSdkPath                  ="$(LibTrackerSdkPath)"

      AcceptableNonZeroExitCodes      ="%(ImpLib.AcceptableNonZeroExitCodes)"
      >
    </LIBA>

  </Target>

  <!-- Prevent attempt to embed manifest -->
  <PropertyGroup><EmbedManifestBy></EmbedManifestBy></PropertyGroup>

  <!-- Undefine the manifest tool task -->
  <Target Name="Manifest" Condition="'@(Manifest)' != ''" />

  <!-- Older versions of MASM choke on the ErrorReporting switch, so remove it -->
  <ItemDefinitionGroup>
    <MASM>
      <ErrorReporting></ErrorReporting>
    </MASM>
  </ItemDefinitionGroup>

  <Import Project="$(VCTargetsPath)\Platforms\Win32\ImportAfter\*.v60.targets" Condition="Exists('$(VCTargetsPath)\Platforms\Win32\ImportAfter')" />
</Project>
